name: Check-and-Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch, and only when TF or TFVARS files are involved
  push:
    branches: [ main ]
    paths:
      - '**.tf'
      - '**.tfvars'
        
  pull_request:
    branches: [ main ]
    paths:
      - '**.tf'
      - '**.tfvars'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  prebuildcheck:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Set up Terraform Cloud authentication, because Terraform doesn't accept environment variables we will build a terraformrc file dynamically using GITHUB secrets
      # This is needed to be able to pull TF modules from the private Terraform registry
      - name: Set up Terraform Cloud authentication
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
        run: |
          cat << EOF> ./run-modules/create-gke/.terraformrc
          {
            "credentials": {
              "app.terraform.io": {
                "token": "$TFE_TOKEN"
              }
            }
          EOF
          grep atlas ./run-modules/create-gke/.terraformrc

      # Runs terraform init to set up modules and pull in needed providers
      - name: Run a Terraform init on CREATE-GKE Terraform files
        uses: docker://ghcr.io/ycit-team-terraformers/terraformers:v1
        with:
          entrypoint: terraform
          args: -chdir=./run-modules/create-gke/ init

      # Runs a container from ghcr.io, version v0.33.1
      - name: Check linting of CREATE-GKE Terraform files
        uses: terraform-linters/tflint-bundle@v0.33.1
        # here are some options: loglevel to provide visibility, module support enabled, disable 1 TFLint default rule that was giving us trouble, and manually specify the location in the repo for TF files
        # we may need to add further steps after this to check each directory where TF files are
        with:
          args: --loglevel=info --module --disable-rule=terraform_deprecated_interpolation ./run-modules/create-gke/
      
      # Runs terraform validate to ensure that configuration looks syntactically valid
      - name: Run a Terraform validate on CREATE-GKE Terraform files
        uses: docker://ghcr.io/ycit-team-terraformers/terraformers:v1
        with:
          entrypoint: terraform
          args: -chdir=./run-modules/create-gke/ validate

      # 